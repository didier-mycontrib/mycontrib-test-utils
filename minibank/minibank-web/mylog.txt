2013-12-11 11:37:46,975 DEBUG main org.hibernate.hql.ast.tree.FromElement - FromClause{level=1} :  tp.myapp.minibank.impl.persistence.entity._Compte (no alias) -> compte2_
2013-12-11 11:37:46,975 DEBUG main org.hibernate.hql.ast.tree.FromClause - addJoinByPathMap() : c.comptes -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Compte,tableAlias=compte2_,origin=Client client0_,columns={client0_.numClient ,className=tp.myapp.minibank.impl.persistence.entity._Compte}}
2013-12-11 11:37:46,975 DEBUG main org.hibernate.hql.ast.tree.DotNode - dereferenceCollection() : Created new FROM element for c.comptes : ClientCompte compte2_
2013-12-11 11:37:46,975 DEBUG main org.hibernate.hql.ast.tree.FromReferenceNode - Resolved :  c.comptes -> .
2013-12-11 11:37:46,977 DEBUG main org.hibernate.hql.ast.tree.FromReferenceNode - Resolved :  c -> client0_.numClient
2013-12-11 11:37:46,977 DEBUG main org.hibernate.hql.ast.tree.DotNode - getDataType() : numero -> org.hibernate.type.LongType@1953fd7
2013-12-11 11:37:46,978 DEBUG main org.hibernate.hql.ast.tree.FromReferenceNode - Resolved :  c.numero -> client0_.numClient
2013-12-11 11:37:46,979 DEBUG main org.hibernate.hql.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2013-12-11 11:37:46,979 DEBUG main org.hibernate.hql.ast.HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( . client0_.numClient comptes ) ) ( FromClause{level=1} ( Client client0_ ClientCompte compte2_ ) ) ( where ( = ( client0_.numClient client0_.numClient numero ) ? ) ) )
2013-12-11 11:37:46,988 DEBUG main org.hibernate.hql.ast.util.JoinProcessor - Using FROM fragment [Client client0_]
2013-12-11 11:37:46,988 DEBUG main org.hibernate.hql.ast.util.JoinProcessor - Using FROM fragment [inner join ClientCompte comptes1_ on client0_.numClient=comptes1_.numCli inner join Compte compte2_ on comptes1_.numCpt=compte2_.numCpt]
2013-12-11 11:37:46,988 DEBUG main org.hibernate.hql.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
2013-12-11 11:37:46,989 DEBUG main org.hibernate.hql.ast.AST - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Compte,ClientCompte,Client)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'compte2_.numCpt as numCpt2_' {propertyName=comptes,dereferenceType=NULL_TREE_LOOKAHEAD,propertyPath=comptes,path=c.comptes,tableAlias=compte2_,className=tp.myapp.minibank.impl.persistence.entity._Compte,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'client0_.numClient' {alias=c, className=tp.myapp.minibank.impl.persistence.entity._Client, tableAlias=client0_}
    |  |  \-[IDENT] IdentNode: 'comptes' {originalText=comptes}
    |  \-[SQL_TOKEN] SqlFragment: 'compte2_.label as label2_, compte2_.solde as solde2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[c], fromElementByTableAlias=[compte2_, client0_], fromElementsByPath=[c.comptes], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Client client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Client,tableAlias=client0_,origin=null,columns={,className=tp.myapp.minibank.impl.persistence.entity._Client}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join ClientCompte comptes1_ on client0_.numClient=comptes1_.numCli inner join Compte compte2_ on comptes1_.numCpt=compte2_.numCpt' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=tp.myapp.minibank.impl.persistence.entity._Client.comptes,tableName=Compte,tableAlias=compte2_,origin=Client client0_,columns={client0_.numClient ,className=tp.myapp.minibank.impl.persistence.entity._Compte}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.numClient' {propertyName=numero,dereferenceType=ALL,propertyPath=numero,path=c.numero,tableAlias=client0_,className=tp.myapp.minibank.impl.persistence.entity._Client,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'client0_.numClient' {alias=c, className=tp.myapp.minibank.impl.persistence.entity._Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'numero' {originalText=numero}
          \-[NAMED_PARAM] ParameterNode: '?' {name=numCli, expectedType=org.hibernate.type.LongType@1953fd7}

2013-12-11 11:37:46,989 DEBUG main org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
2013-12-11 11:37:46,997 DEBUG main org.hibernate.hql.ast.QueryTranslatorImpl - HQL: select c.comptes from tp.myapp.minibank.impl.persistence.entity._Client c where c.numero= :numCli
2013-12-11 11:37:46,997 DEBUG main org.hibernate.hql.ast.QueryTranslatorImpl - SQL: select compte2_.numCpt as numCpt2_, compte2_.label as label2_, compte2_.solde as solde2_ from Client client0_ inner join ClientCompte comptes1_ on client0_.numClient=comptes1_.numCli inner join Compte compte2_ on comptes1_.numCpt=compte2_.numCpt where client0_.numClient=?
2013-12-11 11:37:46,997 DEBUG main org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
2013-12-11 11:37:47,004 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,004 DEBUG main org.hibernate.SQL - select compte2_.numCpt as numCpt2_, compte2_.label as label2_, compte2_.solde as solde2_ from Client client0_ inner join ClientCompte comptes1_ on client0_.numClient=comptes1_.numCli inner join Compte compte2_ on comptes1_.numCpt=compte2_.numCpt where client0_.numClient=?
2013-12-11 11:37:47,046 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,046 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,046 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,047 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,047 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,047 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,047 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,047 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,047 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,047 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,047 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:47,047 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@11b60ea]
2013-12-11 11:37:47,047 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:47,047 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:47,047 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:47,048 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1] (uninitialized)
2013-12-11 11:37:47,048 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1] (uninitialized)
2013-12-11 11:37:47,048 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2] (uninitialized)
2013-12-11 11:37:47,048 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#2], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#2] (uninitialized)
2013-12-11 11:37:47,048 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2013-12-11 11:37:47,048 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 4 collections
2013-12-11 11:37:47,048 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:47,048 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=1200.0, proprietaires=<uninitialized>, label=compte courant, operations=<uninitialized>, numero=1}
2013-12-11 11:37:47,048 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=50.0, proprietaires=<uninitialized>, label=compte codevi, operations=<uninitialized>, numero=2}
2013-12-11 11:37:47,048 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:47,048 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:47,048 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:47,048 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:47,048 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@11b60ea] after transaction
2013-12-11 11:37:47,048 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:47,052 DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test method: context [[TestContext@1e6385e testClass = TestGestionComptes, testInstance = tp.tests.TestGestionComptes@1be72d6, testMethod = testGetComptesOfClient@TestGestionComptes, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a3da69 testClass = TestGestionComptes, locations = '{classpath*:/serviceFacadeSpringConf.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]], class dirties context [false], class mode [null], method dirties context [false].
2013-12-11 11:37:47,052 DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [tp.tests.TestGestionComptes]
2013-12-11 11:37:47,052 DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [tp.tests.TestGestionComptes]
2013-12-11 11:37:47,052 DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[TestContext@1e6385e testClass = TestGestionComptes, testInstance = tp.tests.TestGestionComptes@5f0b44, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a3da69 testClass = TestGestionComptes, locations = '{classpath*:/serviceFacadeSpringConf.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]].
2013-12-11 11:37:47,053 DEBUG main org.springframework.test.context.TestContext - Retrieved ApplicationContext for test class [class tp.tests.TestGestionComptes] from cache with key [[MergedContextConfiguration@1a3da69 testClass = TestGestionComptes, locations = '{classpath*:/serviceFacadeSpringConf.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']].
2013-12-11 11:37:47,053 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'tp.tests.TestGestionComptes': AutowiredFieldElement for private tp.myapp.minibank.itf.domain.service.GestionComptes tp.tests.TestGestionComptes.serviceGestionComptes
2013-12-11 11:37:47,054 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'serviceGestionComptes'
2013-12-11 11:37:47,054 DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'getOperationsOfCompte' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:47,054 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,054 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [tp.myapp.minibank.impl.domain.service.GestionComptesImpl.getOperationsOfCompte]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:47,054 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582670
2013-12-11 11:37:47,054 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@1723556] for JPA transaction
2013-12-11 11:37:47,054 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:47,054 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:47,054 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:47,068 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:47,068 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:47,068 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@1723556] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@15e5a21] does not support JDBC Connection retrieval
2013-12-11 11:37:47,068 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,068 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@1723556] for JPA transaction
2013-12-11 11:37:47,068 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,068 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,068 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,068 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,069 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,069 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,069 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,069 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,069 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,070 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,070 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,070 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,071 DEBUG main org.hibernate.loader.Loader - loading collection: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1]
2013-12-11 11:37:47,071 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,071 DEBUG main org.hibernate.SQL - select operations0_.ref_compte as ref5_2_1_, operations0_.numOp as numOp1_, operations0_.numOp as numOp3_0_, operations0_.ref_compte as ref5_3_0_, operations0_.dateOp as dateOp3_0_, operations0_.label as label3_0_, operations0_.montant as montant3_0_ from Operation operations0_ where operations0_.ref_compte=?
2013-12-11 11:37:47,071 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,071 DEBUG main org.hibernate.loader.Loader - result set contains (possibly empty) collection: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1]
2013-12-11 11:37:47,073 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Operation#1]
2013-12-11 11:37:47,077 DEBUG main org.hibernate.loader.Loader - found row of collection: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1]
2013-12-11 11:37:47,078 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,078 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,078 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Operation#1]
2013-12-11 11:37:47,078 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Operation#1]
2013-12-11 11:37:47,078 DEBUG main org.hibernate.engine.loading.CollectionLoadContext - 1 collections were found in result set for role: tp.myapp.minibank.impl.persistence.entity._Compte.operations
2013-12-11 11:37:47,078 DEBUG main org.hibernate.engine.loading.CollectionLoadContext - collection fully initialized: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1]
2013-12-11 11:37:47,078 DEBUG main org.hibernate.engine.loading.CollectionLoadContext - 1 collections initialized for role: tp.myapp.minibank.impl.persistence.entity._Compte.operations
2013-12-11 11:37:47,079 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,079 DEBUG main org.hibernate.loader.Loader - done loading collection
2013-12-11 11:37:47,079 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:47,079 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@1723556]
2013-12-11 11:37:47,079 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:47,079 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:47,080 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:47,080 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1] (initialized)
2013-12-11 11:37:47,080 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1] (uninitialized)
2013-12-11 11:37:47,080 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2013-12-11 11:37:47,080 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2013-12-11 11:37:47,080 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:47,080 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=1200.0, proprietaires=<uninitialized>, label=compte courant, operations=[tp.myapp.minibank.impl.persistence.entity._Operation#1], numero=1}
2013-12-11 11:37:47,081 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Operation{montant=-50.0, compte=tp.myapp.minibank.impl.persistence.entity._Compte#1, label=achat xy, dateOp=2010-12-24 00:00:00, numero=1}
2013-12-11 11:37:47,082 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:47,082 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:47,082 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:47,082 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:47,082 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@1723556] after transaction
2013-12-11 11:37:47,082 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:47,082 DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test method: context [[TestContext@1e6385e testClass = TestGestionComptes, testInstance = tp.tests.TestGestionComptes@5f0b44, testMethod = testGetOperationsOfCompte@TestGestionComptes, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a3da69 testClass = TestGestionComptes, locations = '{classpath*:/serviceFacadeSpringConf.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]], class dirties context [false], class mode [null], method dirties context [false].
2013-12-11 11:37:47,082 DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [tp.tests.TestGestionComptes]
2013-12-11 11:37:47,082 DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [tp.tests.TestGestionComptes]
2013-12-11 11:37:47,083 DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[TestContext@1e6385e testClass = TestGestionComptes, testInstance = tp.tests.TestGestionComptes@734443, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a3da69 testClass = TestGestionComptes, locations = '{classpath*:/serviceFacadeSpringConf.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]].
2013-12-11 11:37:47,084 DEBUG main org.springframework.test.context.TestContext - Retrieved ApplicationContext for test class [class tp.tests.TestGestionComptes] from cache with key [[MergedContextConfiguration@1a3da69 testClass = TestGestionComptes, locations = '{classpath*:/serviceFacadeSpringConf.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']].
2013-12-11 11:37:47,084 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'tp.tests.TestGestionComptes': AutowiredFieldElement for private tp.myapp.minibank.itf.domain.service.GestionComptes tp.tests.TestGestionComptes.serviceGestionComptes
2013-12-11 11:37:47,084 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'serviceGestionComptes'
2013-12-11 11:37:47,084 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,084 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [tp.myapp.minibank.impl.domain.service.GestionComptesImpl.getCompteByNum]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:47,084 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582670
2013-12-11 11:37:47,084 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@9f498c] for JPA transaction
2013-12-11 11:37:47,084 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:47,084 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:47,084 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:47,090 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:47,090 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:47,090 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@9f498c] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@15e5a21] does not support JDBC Connection retrieval
2013-12-11 11:37:47,090 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,090 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@9f498c] for JPA transaction
2013-12-11 11:37:47,090 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,090 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,090 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,090 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,090 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,091 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,091 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,091 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,091 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,091 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,091 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,091 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,091 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:47,091 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@9f498c]
2013-12-11 11:37:47,091 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:47,091 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:47,091 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:47,091 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1] (uninitialized)
2013-12-11 11:37:47,091 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1] (uninitialized)
2013-12-11 11:37:47,091 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 11:37:47,091 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2013-12-11 11:37:47,091 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:47,091 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=1200.0, proprietaires=<uninitialized>, label=compte courant, operations=<uninitialized>, numero=1}
2013-12-11 11:37:47,092 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:47,092 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:47,092 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:47,092 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:47,092 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@9f498c] after transaction
2013-12-11 11:37:47,092 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:47,092 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,092 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [tp.myapp.minibank.impl.domain.service.GestionComptesImpl.getCompteByNum]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:47,093 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582670
2013-12-11 11:37:47,093 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@192e3a] for JPA transaction
2013-12-11 11:37:47,093 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:47,093 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:47,093 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:47,104 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:47,104 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:47,104 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@192e3a] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@15e5a21] does not support JDBC Connection retrieval
2013-12-11 11:37:47,104 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,104 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@192e3a] for JPA transaction
2013-12-11 11:37:47,104 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,105 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,105 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,105 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,105 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,105 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,105 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,105 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,105 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,105 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,105 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,105 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,105 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:47,105 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@192e3a]
2013-12-11 11:37:47,105 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:47,105 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:47,106 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:47,106 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2] (uninitialized)
2013-12-11 11:37:47,106 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#2], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#2] (uninitialized)
2013-12-11 11:37:47,106 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 11:37:47,106 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2013-12-11 11:37:47,106 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:47,106 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=50.0, proprietaires=<uninitialized>, label=compte codevi, operations=<uninitialized>, numero=2}
2013-12-11 11:37:47,106 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:47,106 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:47,106 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:47,106 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:47,107 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@192e3a] after transaction
2013-12-11 11:37:47,107 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:47,107 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,107 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [tp.myapp.minibank.impl.domain.service.GestionComptesImpl.transferer]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2013-12-11 11:37:47,107 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582671
2013-12-11 11:37:47,107 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@edd0a9] for JPA transaction
2013-12-11 11:37:47,107 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:47,107 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:47,107 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:47,124 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:47,124 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:47,124 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@edd0a9] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@15e5a21] does not support JDBC Connection retrieval
2013-12-11 11:37:47,124 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,124 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@edd0a9] for JPA transaction
2013-12-11 11:37:47,124 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,124 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,124 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,124 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,125 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,125 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,126 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,126 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,126 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,126 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,126 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,126 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,126 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,127 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@edd0a9] for JPA transaction
2013-12-11 11:37:47,127 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,127 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,127 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,127 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,127 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,127 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,128 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,128 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,128 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,128 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,128 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,128 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,128 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:47,128 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@edd0a9]
2013-12-11 11:37:47,128 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:47,128 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:47,131 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
2013-12-11 11:37:47,143 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,143 DEBUG main org.hibernate.SQL - insert into Operation (ref_compte, dateOp, label, montant) values (?, ?, ?, ?)
2013-12-11 11:37:47,146 DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 46
2013-12-11 11:37:47,146 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,147 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
2013-12-11 11:37:47,147 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,147 DEBUG main org.hibernate.SQL - insert into Operation (ref_compte, dateOp, label, montant) values (?, ?, ?, ?)
2013-12-11 11:37:47,153 DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 47
2013-12-11 11:37:47,153 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,153 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:47,153 DEBUG main org.hibernate.engine.CollectionEntry - Collection dirty: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1]
2013-12-11 11:37:47,153 DEBUG main org.hibernate.engine.CollectionEntry - Collection dirty: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2]
2013-12-11 11:37:47,154 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1] (uninitialized)
2013-12-11 11:37:47,154 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1] (uninitialized)
2013-12-11 11:37:47,154 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2] (uninitialized)
2013-12-11 11:37:47,154 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#2], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#2] (uninitialized)
2013-12-11 11:37:47,156 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 2 updates, 0 deletions to 4 objects
2013-12-11 11:37:47,156 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 2 updates, 0 removals to 4 collections
2013-12-11 11:37:47,156 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:47,156 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=1150.0, proprietaires=<uninitialized>, label=compte courant, operations=<uninitialized>, numero=1}
2013-12-11 11:37:47,156 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Operation{montant=50.0, compte=tp.myapp.minibank.impl.persistence.entity._Compte#2, label=credit virement, dateOp=2013-12-11 11:37:47, numero=47}
2013-12-11 11:37:47,156 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=100.0, proprietaires=<uninitialized>, label=compte codevi, operations=<uninitialized>, numero=2}
2013-12-11 11:37:47,157 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Operation{montant=-50.0, compte=tp.myapp.minibank.impl.persistence.entity._Compte#1, label=debit virement, dateOp=2013-12-11 11:37:47, numero=46}
2013-12-11 11:37:47,160 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,160 DEBUG main org.hibernate.SQL - update Compte set label=?, solde=? where numCpt=?
2013-12-11 11:37:47,161 DEBUG main org.hibernate.jdbc.AbstractBatcher - reusing prepared statement
2013-12-11 11:37:47,161 DEBUG main org.hibernate.SQL - update Compte set label=?, solde=? where numCpt=?
2013-12-11 11:37:47,161 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 2
2013-12-11 11:37:47,161 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,196 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:47,196 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:47,196 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:47,196 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:47,196 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@edd0a9] after transaction
2013-12-11 11:37:47,197 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:47,198 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,198 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [tp.myapp.minibank.impl.domain.service.GestionComptesImpl.getCompteByNum]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:47,198 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582671
2013-12-11 11:37:47,199 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@10ee5f0] for JPA transaction
2013-12-11 11:37:47,207 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:47,207 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:47,207 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:47,224 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:47,224 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:47,224 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@10ee5f0] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@15e5a21] does not support JDBC Connection retrieval
2013-12-11 11:37:47,224 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,224 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@10ee5f0] for JPA transaction
2013-12-11 11:37:47,224 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,224 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,224 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,224 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,224 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,224 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,224 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,224 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,224 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,225 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,225 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,225 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,225 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:47,225 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@10ee5f0]
2013-12-11 11:37:47,225 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:47,225 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:47,225 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:47,225 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1] (uninitialized)
2013-12-11 11:37:47,225 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1] (uninitialized)
2013-12-11 11:37:47,225 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 11:37:47,225 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2013-12-11 11:37:47,225 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:47,225 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=1150.0, proprietaires=<uninitialized>, label=compte courant, operations=<uninitialized>, numero=1}
2013-12-11 11:37:47,226 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:47,226 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:47,227 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:47,227 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:47,227 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@10ee5f0] after transaction
2013-12-11 11:37:47,227 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:47,227 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,227 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [tp.myapp.minibank.impl.domain.service.GestionComptesImpl.getCompteByNum]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:47,227 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582672
2013-12-11 11:37:47,227 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@1a9b9d5] for JPA transaction
2013-12-11 11:37:47,227 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:47,227 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:47,227 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:47,231 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:47,231 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:47,231 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@1a9b9d5] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@15e5a21] does not support JDBC Connection retrieval
2013-12-11 11:37:47,232 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,232 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@1a9b9d5] for JPA transaction
2013-12-11 11:37:47,232 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,232 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,232 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,232 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,232 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,232 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,232 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,232 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,232 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,232 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,232 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,232 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,232 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:47,232 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@1a9b9d5]
2013-12-11 11:37:47,232 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:47,232 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:47,232 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:47,232 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2] (uninitialized)
2013-12-11 11:37:47,232 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#2], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#2] (uninitialized)
2013-12-11 11:37:47,232 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 11:37:47,232 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2013-12-11 11:37:47,232 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:47,232 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=100.0, proprietaires=<uninitialized>, label=compte codevi, operations=<uninitialized>, numero=2}
2013-12-11 11:37:47,233 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:47,233 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:47,233 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:47,233 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:47,233 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@1a9b9d5] after transaction
2013-12-11 11:37:47,233 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:47,233 DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test method: context [[TestContext@1e6385e testClass = TestGestionComptes, testInstance = tp.tests.TestGestionComptes@734443, testMethod = testBonTransfert@TestGestionComptes, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a3da69 testClass = TestGestionComptes, locations = '{classpath*:/serviceFacadeSpringConf.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]], class dirties context [false], class mode [null], method dirties context [false].
2013-12-11 11:37:47,233 DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [tp.tests.TestGestionComptes]
2013-12-11 11:37:47,233 DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [tp.tests.TestGestionComptes]
2013-12-11 11:37:47,234 DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[TestContext@1e6385e testClass = TestGestionComptes, testInstance = tp.tests.TestGestionComptes@18134b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a3da69 testClass = TestGestionComptes, locations = '{classpath*:/serviceFacadeSpringConf.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]].
2013-12-11 11:37:47,234 DEBUG main org.springframework.test.context.TestContext - Retrieved ApplicationContext for test class [class tp.tests.TestGestionComptes] from cache with key [[MergedContextConfiguration@1a3da69 testClass = TestGestionComptes, locations = '{classpath*:/serviceFacadeSpringConf.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']].
2013-12-11 11:37:47,234 DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'tp.tests.TestGestionComptes': AutowiredFieldElement for private tp.myapp.minibank.itf.domain.service.GestionComptes tp.tests.TestGestionComptes.serviceGestionComptes
2013-12-11 11:37:47,234 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'serviceGestionComptes'
2013-12-11 11:37:47,234 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,234 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [tp.myapp.minibank.impl.domain.service.GestionComptesImpl.getCompteByNum]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:47,234 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582672
2013-12-11 11:37:47,234 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@1e616dc] for JPA transaction
2013-12-11 11:37:47,234 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:47,234 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:47,234 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:47,241 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:47,241 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:47,241 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@1e616dc] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@15e5a21] does not support JDBC Connection retrieval
2013-12-11 11:37:47,241 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,241 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@1e616dc] for JPA transaction
2013-12-11 11:37:47,241 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,241 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,241 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,241 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,241 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,241 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,241 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,241 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,241 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,241 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,241 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,241 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,241 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:47,241 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@1e616dc]
2013-12-11 11:37:47,241 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:47,241 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:47,241 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:47,242 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1] (uninitialized)
2013-12-11 11:37:47,242 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1] (uninitialized)
2013-12-11 11:37:47,242 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 11:37:47,242 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2013-12-11 11:37:47,242 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:47,242 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=1150.0, proprietaires=<uninitialized>, label=compte courant, operations=<uninitialized>, numero=1}
2013-12-11 11:37:47,242 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:47,242 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:47,242 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:47,242 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:47,242 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@1e616dc] after transaction
2013-12-11 11:37:47,242 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:47,242 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,242 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [tp.myapp.minibank.impl.domain.service.GestionComptesImpl.getCompteByNum]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:47,242 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582672
2013-12-11 11:37:47,242 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@5de97b] for JPA transaction
2013-12-11 11:37:47,242 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:47,242 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:47,242 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:47,248 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:47,248 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:47,248 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@5de97b] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@15e5a21] does not support JDBC Connection retrieval
2013-12-11 11:37:47,248 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,248 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@5de97b] for JPA transaction
2013-12-11 11:37:47,248 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,248 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,248 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,248 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,248 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,248 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,249 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,249 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,249 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,249 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,249 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,249 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,249 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:47,249 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@5de97b]
2013-12-11 11:37:47,249 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:47,249 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:47,249 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:47,249 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2] (uninitialized)
2013-12-11 11:37:47,249 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#2], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#2] (uninitialized)
2013-12-11 11:37:47,249 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 11:37:47,249 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2013-12-11 11:37:47,249 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:47,249 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=100.0, proprietaires=<uninitialized>, label=compte codevi, operations=<uninitialized>, numero=2}
2013-12-11 11:37:47,249 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:47,249 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:47,249 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:47,249 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:47,250 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@5de97b] after transaction
2013-12-11 11:37:47,250 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:47,250 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,250 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [tp.myapp.minibank.impl.domain.service.GestionComptesImpl.transferer]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2013-12-11 11:37:47,250 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582672
2013-12-11 11:37:47,250 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@c0635b] for JPA transaction
2013-12-11 11:37:47,250 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:47,250 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:47,250 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:47,254 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:47,254 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:47,254 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@c0635b] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@15e5a21] does not support JDBC Connection retrieval
2013-12-11 11:37:47,254 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,254 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@c0635b] for JPA transaction
2013-12-11 11:37:47,254 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,255 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,255 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,255 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,255 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,255 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,255 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,255 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,255 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,255 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,255 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,255 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,255 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,256 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@c0635b] for JPA transaction
2013-12-11 11:37:47,256 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,256 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#-2]
2013-12-11 11:37:47,256 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,256 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,256 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,256 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,256 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,256 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,256 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,256 ERROR main tp.myapp.minibank.impl.domain.service.GestionComptesImpl - echec GestionComptesImpl.transferer
java.lang.NullPointerException
	at tp.myapp.minibank.impl.domain.service.GestionComptesImpl.transferer(GestionComptesImpl.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy31.transferer(Unknown Source)
	at tp.tests.TestGestionComptes.testMauvaisTransfert(TestGestionComptes.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
2013-12-11 11:37:47,259 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction rollback
2013-12-11 11:37:47,259 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@c0635b]
2013-12-11 11:37:47,259 DEBUG main org.hibernate.transaction.JDBCTransaction - rollback
2013-12-11 11:37:47,260 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:47,260 DEBUG main org.hibernate.transaction.JDBCTransaction - rolled back JDBC Connection
2013-12-11 11:37:47,260 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:47,260 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:47,260 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@c0635b] after transaction
2013-12-11 11:37:47,260 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:47,260 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,260 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [tp.myapp.minibank.impl.domain.service.GestionComptesImpl.getCompteByNum]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:47,260 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582672
2013-12-11 11:37:47,260 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@5baf07] for JPA transaction
2013-12-11 11:37:47,260 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:47,260 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:47,261 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:47,264 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:47,264 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:47,264 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@5baf07] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@15e5a21] does not support JDBC Connection retrieval
2013-12-11 11:37:47,264 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,264 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@5baf07] for JPA transaction
2013-12-11 11:37:47,265 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,265 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,269 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,269 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,270 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,270 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,270 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,270 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,270 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,270 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#1]
2013-12-11 11:37:47,270 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,270 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,270 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:47,270 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@5baf07]
2013-12-11 11:37:47,270 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:47,270 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:47,270 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:47,270 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#1] (uninitialized)
2013-12-11 11:37:47,270 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#1] (uninitialized)
2013-12-11 11:37:47,270 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 11:37:47,270 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2013-12-11 11:37:47,270 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:47,271 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=1150.0, proprietaires=<uninitialized>, label=compte courant, operations=<uninitialized>, numero=1}
2013-12-11 11:37:47,271 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:47,271 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:47,271 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:47,272 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:47,272 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@5baf07] after transaction
2013-12-11 11:37:47,272 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:47,272 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,272 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [tp.myapp.minibank.impl.domain.service.GestionComptesImpl.getCompteByNum]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:47,272 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582672
2013-12-11 11:37:47,272 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@1958dc2] for JPA transaction
2013-12-11 11:37:47,272 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:47,272 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:47,272 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:47,275 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:47,275 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:47,276 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@1958dc2] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@15e5a21] does not support JDBC Connection retrieval
2013-12-11 11:37:47,276 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:47,276 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Found thread-bound EntityManager [org.hibernate.ejb.EntityManagerImpl@1958dc2] for JPA transaction
2013-12-11 11:37:47,276 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Participating in existing transaction
2013-12-11 11:37:47,276 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,276 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:47,276 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt2_0_, compte0_.label as label2_0_, compte0_.solde as solde2_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 11:37:47,276 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:47,278 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,279 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:47,279 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:47,279 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,279 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Compte#2]
2013-12-11 11:37:47,280 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:47,280 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:47,280 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:47,280 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@1958dc2]
2013-12-11 11:37:47,280 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:47,280 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:47,280 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:47,280 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2], was: [tp.myapp.minibank.impl.persistence.entity._Compte.operations#2] (uninitialized)
2013-12-11 11:37:47,280 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#2], was: [tp.myapp.minibank.impl.persistence.entity._Compte.proprietaires#2] (uninitialized)
2013-12-11 11:37:47,280 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 11:37:47,280 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2013-12-11 11:37:47,280 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:47,280 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Compte{solde=100.0, proprietaires=<uninitialized>, label=compte codevi, operations=<uninitialized>, numero=2}
2013-12-11 11:37:47,281 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:47,281 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:47,281 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:47,281 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:47,281 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@1958dc2] after transaction
2013-12-11 11:37:47,281 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:47,282 DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test method: context [[TestContext@1e6385e testClass = TestGestionComptes, testInstance = tp.tests.TestGestionComptes@18134b, testMethod = testMauvaisTransfert@TestGestionComptes, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a3da69 testClass = TestGestionComptes, locations = '{classpath*:/serviceFacadeSpringConf.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]], class dirties context [false], class mode [null], method dirties context [false].
2013-12-11 11:37:47,282 DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test class: context [[TestContext@1e6385e testClass = TestGestionComptes, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1a3da69 testClass = TestGestionComptes, locations = '{classpath*:/serviceFacadeSpringConf.xml}', classes = '{}', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader']]], dirtiesContext [false].
2013-12-11 11:37:47,284 INFO Thread-2 org.springframework.context.support.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@1511e28: startup date [Wed Dec 11 11:37:45 CET 2013]; root of context hierarchy
2013-12-11 11:37:47,284 DEBUG Thread-2 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
2013-12-11 11:37:47,284 INFO Thread-2 org.springframework.beans.factory.support.DefaultListableBeanFactory - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1afe733: defining beans [facadeMiniBank,serviceGestionComptes,serviceGestionClients,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor#0]; root of factory hierarchy
2013-12-11 11:37:47,285 DEBUG Thread-2 org.springframework.beans.factory.support.DefaultListableBeanFactory - Retrieved dependent beans for bean 'serviceGestionComptes': [tp.tests.TestGestionComptes]
