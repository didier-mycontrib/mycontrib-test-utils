2013-12-11 11:37:43,698 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName() - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=numCli, escapePattern=null) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=numCpt, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=com.mysql.jdbc.JDBC4Connection@7590f, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a639e9, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@680693, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@fd10a2], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4f087f, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@b6d12f, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName() - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=numCpt, escapePattern=null) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=numCli) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=2) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numCli) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numCli) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1ee1281: insert into ClientCompte (numCli, numCpt) values (** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=numCpt) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=2) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numCpt) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numCpt) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1ee1281: insert into ClientCompte (numCli, numCpt) values (1, ** NOT SPECIFIED **)) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
2013-12-11 11:37:43,698 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
2013-12-11 11:37:43,699 DEBUG main org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=ClientCompte, columns=[(numCli, UNKNOWN, nullableUnknown), (numCpt, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], row=1) - start
2013-12-11 11:37:43,699 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=1, column=numCli) - start
2013-12-11 11:37:43,699 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
2013-12-11 11:37:43,699 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=2) - start
2013-12-11 11:37:43,699 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numCli) - start
2013-12-11 11:37:43,699 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numCli) - start
2013-12-11 11:37:43,699 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=1, column=numCpt) - start
2013-12-11 11:37:43,699 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=2) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numCpt) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numCpt) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=1, column=numCli) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=2) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numCli) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numCli) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@1ee1281: insert into ClientCompte (numCli, numCpt) values (1, 1)) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=1, column=numCpt) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=2) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numCpt) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numCpt) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=2, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@1ee1281: insert into ClientCompte (numCli, numCpt) values (1, 1)) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
2013-12-11 11:37:43,700 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=2) - start
2013-12-11 11:37:43,702 DEBUG main org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=ClientCompte, columns=[(numCli, UNKNOWN, nullableUnknown), (numCpt, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=2], row=2) - start
2013-12-11 11:37:43,702 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=2, column=numCli) - start
2013-12-11 11:37:43,702 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2) - start
2013-12-11 11:37:43,702 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=2, rowCount=2) - start
2013-12-11 11:37:43,702 DEBUG main org.dbunit.DefaultOperationListener - operationSetUpFinished(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=com.mysql.jdbc.JDBC4Connection@7590f, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a639e9, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@680693, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@fd10a2], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4f087f, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@b6d12f, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
2013-12-11 11:37:43,702 DEBUG main org.dbunit.DefaultOperationListener - closeConnection(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=com.mysql.jdbc.JDBC4Connection@7590f, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@a639e9, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@680693, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@fd10a2], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@4f087f, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@b6d12f, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
2013-12-11 11:37:43,702 INFO main org.mycontrib.generic.test.GenericDaoTest - ****** test CRUD sur T avec plusieurs petites transactions (via DAO GenericDao<T>) *****
2013-12-11 11:37:43,702 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 11:37:43,702 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 11:37:43,702 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
2013-12-11 11:37:43,702 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@100eab5, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@13146ee) - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@100eab5, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@13146ee) - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@27d19e) - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.CachedDataSet - startDataSet() - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=Client, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@27d19e) - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=Client) - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=Client, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@27d19e) - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)]) - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Client, object=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - start
2013-12-11 11:37:43,703 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - end - result=CLIENT
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=nom) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=prenom) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=dateNaissance) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=ref_adressePrincipale) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=password) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=telephone) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=email) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.CachedDataSet - row(values=therieur) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.DefaultTable - addRow(values=therieur) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=Client) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.CachedDataSet - endTable() - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Client, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - start
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - end - result=CLIENT
2013-12-11 11:37:43,704 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[Client], _tableMap={CLIENT=org.dbunit.dataset.DefaultTable[_metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractDataSet - getTable(tableName=Client) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractDataSet - initialize() - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.DefaultTableIterator - getTable() - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Client, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - end - result=CLIENT
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=serialVersionUID) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=serialVersionUID) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=serialVersionUID) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=adressePrincipale) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=adressePrincipale) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=adressePrincipale) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=dateNaissance) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=dateNaissance) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=dateNaissance) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=password) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=password) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=password) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=comptes) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=comptes) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=comptes) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=serialVersionUID) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=serialVersionUID) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=serialVersionUID) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=numClient) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numClient) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numClient) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=nom) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nom) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=nom) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=prenom) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=prenom) - start
2013-12-11 11:37:43,705 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=prenom) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=adresse) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=adresse) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=adresse) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=telephone) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=telephone) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=telephone) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=email) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=email) - start
2013-12-11 11:37:43,706 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=email) - start
2013-12-11 11:37:43,706 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:43,706 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.mycontrib.generic.persistence.spring.GenericDaoJpaSpring.persistNewEntity]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2013-12-11 11:37:43,706 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582637
2013-12-11 11:37:43,706 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@d4d87e] for JPA transaction
2013-12-11 11:37:43,706 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:43,706 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:43,706 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:43,709 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:43,709 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:43,709 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@d4d87e] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@19632eb] does not support JDBC Connection retrieval
2013-12-11 11:37:43,709 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
2013-12-11 11:37:43,709 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:43,709 DEBUG main org.hibernate.SQL - insert into Client (ref_adressePrincipale, dateNaissance, email, nom, password, prenom, telephone) values (?, ?, ?, ?, ?, ?, ?)
2013-12-11 11:37:43,710 DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 3
2013-12-11 11:37:43,710 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:43,710 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:43,710 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@d4d87e]
2013-12-11 11:37:43,710 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:43,710 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:43,710 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:43,710 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 11:37:43,710 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2013-12-11 11:37:43,710 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:43,710 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Client{prenom=alain, comptes=null, dateNaissance=1980-02-11 11:37:43, email=alain.therieur@ici_ou_la, adressePrincipale=null, telephone=0102030405, password=pwd2, nom=therieur, numero=3}
2013-12-11 11:37:43,712 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:43,712 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:43,712 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:43,712 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:43,712 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@d4d87e] after transaction
2013-12-11 11:37:43,712 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:43,712 INFO main org.mycontrib.generic.test.GenericDaoTest - 	 id(pk) de la nouvelle entite creee: 3
2013-12-11 11:37:43,713 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:43,713 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.mycontrib.generic.persistence.spring.GenericDaoJpaSpring.getEntityById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:43,713 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582637
2013-12-11 11:37:43,713 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@3313c] for JPA transaction
2013-12-11 11:37:43,713 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:43,713 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:43,713 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:43,716 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:43,716 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:43,716 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@3313c] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@19632eb] does not support JDBC Connection retrieval
2013-12-11 11:37:43,716 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,716 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:43,716 DEBUG main org.hibernate.SQL - select client0_.numClient as numClient0_1_, client0_.ref_adressePrincipale as ref8_0_1_, client0_.dateNaissance as dateNais2_0_1_, client0_.email as email0_1_, client0_.nom as nom0_1_, client0_.password as password0_1_, client0_.prenom as prenom0_1_, client0_.telephone as telephone0_1_, adresse1_.idAdr as idAdr1_0_, adresse1_.codePostal as codePostal1_0_, adresse1_.rue as rue1_0_, adresse1_.ville as ville1_0_ from Client client0_ left outer join Adresse adresse1_ on client0_.ref_adressePrincipale=adresse1_.idAdr where client0_.numClient=?
2013-12-11 11:37:43,717 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:43,717 DEBUG main org.hibernate.loader.Loader - result row: null, EntityKey[tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,717 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:43,717 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:43,717 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,717 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,717 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:43,717 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:43,717 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:43,717 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@3313c]
2013-12-11 11:37:43,717 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:43,717 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:43,717 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:43,717 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Client.comptes#3], was: [tp.myapp.minibank.impl.persistence.entity._Client.comptes#3] (uninitialized)
2013-12-11 11:37:43,718 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 11:37:43,718 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2013-12-11 11:37:43,718 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:43,718 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Client{prenom=alain, comptes=<uninitialized>, dateNaissance=1980-02-11 00:00:00, email=alain.therieur@ici_ou_la, adressePrincipale=null, telephone=0102030405, password=pwd2, nom=therieur, numero=3}
2013-12-11 11:37:43,718 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:43,718 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:43,718 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:43,718 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:43,718 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@3313c] after transaction
2013-12-11 11:37:43,718 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:43,718 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 11:37:43,718 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 11:37:43,718 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
2013-12-11 11:37:43,718 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
2013-12-11 11:37:43,719 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@1a1118a, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@1868b3f) - start
2013-12-11 11:37:43,719 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@1a1118a, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@1868b3f) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1fd8f5) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.CachedDataSet - startDataSet() - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=Client, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1fd8f5) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=Client) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=Client, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1fd8f5) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)]) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Client, object=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - end - result=CLIENT
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=nom) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=prenom) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=dateNaissance) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=ref_adressePrincipale) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=password) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=telephone) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=email) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.CachedDataSet - row(values=therieur) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.DefaultTable - addRow(values=therieur) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=Client) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.CachedDataSet - endTable() - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Client, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - end - result=CLIENT
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[Client], _tableMap={CLIENT=org.dbunit.dataset.DefaultTable[_metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.AbstractDataSet - getTable(tableName=Client) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.AbstractDataSet - initialize() - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
2013-12-11 11:37:43,720 DEBUG main org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.DefaultTableIterator - getTable() - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Client, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - end - result=CLIENT
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=serialVersionUID) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=serialVersionUID) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=serialVersionUID) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=adressePrincipale) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=adressePrincipale) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=adressePrincipale) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=dateNaissance) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=dateNaissance) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=dateNaissance) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=password) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=password) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=password) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=comptes) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=comptes) - start
2013-12-11 11:37:43,721 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=comptes) - start
2013-12-11 11:37:43,721 INFO main org.mycontrib.generic.test.GenericDaoTest - 	 valeurs initiales de l'entite (creee): Client [numero=3, nom=therieur, prenom=alain, telephone=0102030405, email=alain.therieur@ici_ou_la]
2013-12-11 11:37:43,721 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:43,721 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.mycontrib.generic.persistence.spring.GenericDaoJpaSpring.getEntityById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:43,721 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582637
2013-12-11 11:37:43,721 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@1986866] for JPA transaction
2013-12-11 11:37:43,721 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:43,721 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:43,721 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:43,726 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:43,726 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:43,726 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@1986866] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@19632eb] does not support JDBC Connection retrieval
2013-12-11 11:37:43,726 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,727 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:43,727 DEBUG main org.hibernate.SQL - select client0_.numClient as numClient0_1_, client0_.ref_adressePrincipale as ref8_0_1_, client0_.dateNaissance as dateNais2_0_1_, client0_.email as email0_1_, client0_.nom as nom0_1_, client0_.password as password0_1_, client0_.prenom as prenom0_1_, client0_.telephone as telephone0_1_, adresse1_.idAdr as idAdr1_0_, adresse1_.codePostal as codePostal1_0_, adresse1_.rue as rue1_0_, adresse1_.ville as ville1_0_ from Client client0_ left outer join Adresse adresse1_ on client0_.ref_adressePrincipale=adresse1_.idAdr where client0_.numClient=?
2013-12-11 11:37:43,727 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:43,727 DEBUG main org.hibernate.loader.Loader - result row: null, EntityKey[tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,727 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:43,727 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:43,727 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,727 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,727 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:43,727 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:43,727 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:43,727 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@1986866]
2013-12-11 11:37:43,727 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:43,727 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:43,727 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:43,727 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Client.comptes#3], was: [tp.myapp.minibank.impl.persistence.entity._Client.comptes#3] (uninitialized)
2013-12-11 11:37:43,727 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 11:37:43,727 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2013-12-11 11:37:43,727 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:43,728 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Client{prenom=alain, comptes=<uninitialized>, dateNaissance=1980-02-11 00:00:00, email=alain.therieur@ici_ou_la, adressePrincipale=null, telephone=0102030405, password=pwd2, nom=therieur, numero=3}
2013-12-11 11:37:43,728 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:43,728 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:43,728 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:43,728 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:43,728 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@1986866] after transaction
2013-12-11 11:37:43,728 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:43,728 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 11:37:43,728 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 11:37:43,728 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
2013-12-11 11:37:43,728 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
2013-12-11 11:37:43,728 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@182789c, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@bc6d6a) - start
2013-12-11 11:37:43,728 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@182789c, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@bc6d6a) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@b38813) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.CachedDataSet - startDataSet() - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=Client, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@b38813) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=Client, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@b38813) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)]) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Client, object=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=nom) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=prenom) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=dateNaissance) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=ref_adressePrincipale) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=password) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=telephone) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=email) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.CachedDataSet - row(values=therieur) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.DefaultTable - addRow(values=therieur) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.CachedDataSet - endTable() - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Client, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[Client], _tableMap={CLIENT=org.dbunit.dataset.DefaultTable[_metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractDataSet - getTable(tableName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractDataSet - initialize() - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.DefaultTableIterator - getTable() - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Client, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=serialVersionUID) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=serialVersionUID) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=serialVersionUID) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=adressePrincipale) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=adressePrincipale) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=adressePrincipale) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=dateNaissance) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=dateNaissance) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=dateNaissance) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=password) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=password) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=password) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=comptes) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=comptes) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=comptes) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=serialVersionUID) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=serialVersionUID) - start
2013-12-11 11:37:43,729 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=serialVersionUID) - start
2013-12-11 11:37:43,730 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=numClient) - start
2013-12-11 11:37:43,730 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,730 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,730 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numClient) - start
2013-12-11 11:37:43,730 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numClient) - start
2013-12-11 11:37:43,730 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=nom) - start
2013-12-11 11:37:43,730 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,731 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,731 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=nom) - start
2013-12-11 11:37:43,731 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=nom) - start
2013-12-11 11:37:43,731 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=prenom) - start
2013-12-11 11:37:43,731 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,731 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,731 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=prenom) - start
2013-12-11 11:37:43,731 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=prenom) - start
2013-12-11 11:37:43,731 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=adresse) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=adresse) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=adresse) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=telephone) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=telephone) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=telephone) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=email) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=email) - start
2013-12-11 11:37:43,732 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=email) - start
2013-12-11 11:37:43,732 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:43,737 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.mycontrib.generic.persistence.spring.GenericDaoJpaSpring.updateEntity]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2013-12-11 11:37:43,737 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582637
2013-12-11 11:37:43,737 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@183552e] for JPA transaction
2013-12-11 11:37:43,737 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:43,737 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:43,737 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:43,741 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:43,741 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:43,741 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@183552e] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@19632eb] does not support JDBC Connection retrieval
2013-12-11 11:37:43,741 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,741 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:43,741 DEBUG main org.hibernate.SQL - select client0_.numClient as numClient0_0_, client0_.ref_adressePrincipale as ref8_0_0_, client0_.dateNaissance as dateNais2_0_0_, client0_.email as email0_0_, client0_.nom as nom0_0_, client0_.password as password0_0_, client0_.prenom as prenom0_0_, client0_.telephone as telephone0_0_ from Client client0_ where client0_.numClient=?
2013-12-11 11:37:43,741 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:43,741 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,741 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:43,741 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:43,741 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,741 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,741 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:43,741 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:43,741 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:43,742 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@183552e]
2013-12-11 11:37:43,742 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:43,742 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:43,742 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:43,742 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Client.comptes#3], was: [tp.myapp.minibank.impl.persistence.entity._Client.comptes#3] (uninitialized)
2013-12-11 11:37:43,742 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2013-12-11 11:37:43,742 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2013-12-11 11:37:43,742 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:43,742 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Client{prenom=alex, comptes=<uninitialized>, dateNaissance=1980-02-11 11:37:43, email=alex.therieur@ici_ou_la, adressePrincipale=null, telephone=0504030201, password=pwd2, nom=therieur, numero=3}
2013-12-11 11:37:43,742 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:43,742 DEBUG main org.hibernate.SQL - update Client set ref_adressePrincipale=?, dateNaissance=?, email=?, nom=?, password=?, prenom=?, telephone=? where numClient=?
2013-12-11 11:37:43,742 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2013-12-11 11:37:43,743 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:43,744 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:43,744 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:43,744 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:43,744 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:43,745 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@183552e] after transaction
2013-12-11 11:37:43,745 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:43,745 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:43,745 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.mycontrib.generic.persistence.spring.GenericDaoJpaSpring.getEntityById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 11:37:43,745 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582637
2013-12-11 11:37:43,745 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@19a5197] for JPA transaction
2013-12-11 11:37:43,745 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:43,745 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:43,745 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:43,748 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:43,749 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:43,749 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@19a5197] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@19632eb] does not support JDBC Connection retrieval
2013-12-11 11:37:43,749 DEBUG main org.hibernate.loader.Loader - loading entity: [tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,749 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 11:37:43,749 DEBUG main org.hibernate.SQL - select client0_.numClient as numClient0_1_, client0_.ref_adressePrincipale as ref8_0_1_, client0_.dateNaissance as dateNais2_0_1_, client0_.email as email0_1_, client0_.nom as nom0_1_, client0_.password as password0_1_, client0_.prenom as prenom0_1_, client0_.telephone as telephone0_1_, adresse1_.idAdr as idAdr1_0_, adresse1_.codePostal as codePostal1_0_, adresse1_.rue as rue1_0_, adresse1_.ville as ville1_0_ from Client client0_ left outer join Adresse adresse1_ on client0_.ref_adressePrincipale=adresse1_.idAdr where client0_.numClient=?
2013-12-11 11:37:43,749 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 11:37:43,749 DEBUG main org.hibernate.loader.Loader - result row: null, EntityKey[tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,749 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 11:37:43,749 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 11:37:43,749 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,749 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [tp.myapp.minibank.impl.persistence.entity._Client#3]
2013-12-11 11:37:43,749 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 11:37:43,749 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 11:37:43,749 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 11:37:43,749 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@19a5197]
2013-12-11 11:37:43,749 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 11:37:43,749 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 11:37:43,749 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 11:37:43,750 DEBUG main org.hibernate.engine.Collections - Collection found: [tp.myapp.minibank.impl.persistence.entity._Client.comptes#3], was: [tp.myapp.minibank.impl.persistence.entity._Client.comptes#3] (uninitialized)
2013-12-11 11:37:43,750 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 11:37:43,750 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2013-12-11 11:37:43,750 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 11:37:43,750 DEBUG main org.hibernate.pretty.Printer - tp.myapp.minibank.impl.persistence.entity._Client{prenom=alex, comptes=<uninitialized>, dateNaissance=1980-02-11 00:00:00, email=alex.therieur@ici_ou_la, adressePrincipale=null, telephone=0504030201, password=pwd2, nom=therieur, numero=3}
2013-12-11 11:37:43,750 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 11:37:43,750 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 11:37:43,750 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 11:37:43,750 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 11:37:43,750 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@19a5197] after transaction
2013-12-11 11:37:43,750 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 11:37:43,750 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 11:37:43,750 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 11:37:43,750 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
2013-12-11 11:37:43,750 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@4008a, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@bf7ca6) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@4008a, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@bf7ca6) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@190a2c8) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.CachedDataSet - startDataSet() - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=Client, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@190a2c8) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=Client) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=Client, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@190a2c8) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)]) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Client, object=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - end - result=CLIENT
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=nom) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=prenom) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=dateNaissance) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=ref_adressePrincipale) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=password) - start
2013-12-11 11:37:43,751 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=telephone) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=email) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.CachedDataSet - row(values=therieur) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.DefaultTable - addRow(values=therieur) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=Client) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.CachedDataSet - endTable() - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Client, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - end - result=CLIENT
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[Client], _tableMap={CLIENT=org.dbunit.dataset.DefaultTable[_metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractDataSet - getTable(tableName=Client) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractDataSet - initialize() - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.DefaultTableIterator - getTable() - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Client, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Client, columns=[(nom, UNKNOWN, nullableUnknown), (prenom, UNKNOWN, nullableUnknown), (dateNaissance, UNKNOWN, nullableUnknown), (ref_adressePrincipale, UNKNOWN, nullableUnknown), (password, UNKNOWN, nullableUnknown), (telephone, UNKNOWN, nullableUnknown), (email, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=CLIENT) - end - result=CLIENT
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Client) - end - result=CLIENT
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=serialVersionUID) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=serialVersionUID) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=serialVersionUID) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=adressePrincipale) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=adressePrincipale) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=adressePrincipale) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=dateNaissance) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=dateNaissance) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=dateNaissance) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=password) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=password) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=password) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=comptes) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=comptes) - start
2013-12-11 11:37:43,752 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=comptes) - start
2013-12-11 11:37:43,752 INFO main org.mycontrib.generic.test.GenericDaoTest - 	 nouvelle valeur de l'entite (modifiee): Client [numero=3, nom=therieur, prenom=alex, telephone=0504030201, email=alex.therieur@ici_ou_la]
2013-12-11 11:37:43,752 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 11:37:43,752 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.mycontrib.generic.persistence.spring.GenericDaoJpaSpring.deleteEntity]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2013-12-11 11:37:43,752 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867582637
2013-12-11 11:37:43,752 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@69b2bc] for JPA transaction
2013-12-11 11:37:43,752 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 11:37:43,753 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 11:37:43,753 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost/minibank_db_ex1]
2013-12-11 11:37:43,756 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 11:37:43,756 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 11:37:43,756 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@69b2bc] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@19632eb] does not support JDBC Connection retrieval
