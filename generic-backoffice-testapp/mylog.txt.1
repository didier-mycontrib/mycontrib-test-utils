2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Operation) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Operation) - end - result=OPERATION
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Operation) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Operation) - end - result=OPERATION
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numOp) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=dateOp) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=montant) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=ref_compte) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.operation.InsertOperation - getIgnoreMapping(table=org.dbunit.dataset.DefaultTable[_metaData=tableName=Operation, columns=[(numOp, UNKNOWN, nullableUnknown), (dateOp, UNKNOWN, nullableUnknown), (label, UNKNOWN, nullableUnknown), (montant, UNKNOWN, nullableUnknown), (ref_compte, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=0) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=numOp) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numOp) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numOp) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=dateOp) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=dateOp) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=dateOp) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=label) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=montant) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=montant) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=montant) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=ref_compte) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=ref_compte) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=ref_compte) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.operation.InsertOperation - getOperationData(metaData=tableName=Operation, columns=[(numOp, INTEGER, noNulls), (dateOp, DATE, nullable), (label, VARCHAR, nullable), (montant, DOUBLE, nullable), (ref_compte, INTEGER, nullable)], keys=[(numOp, INTEGER, noNulls)], ignoreMapping={}, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=com.mysql.jdbc.JDBC4Connection@f0747e, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@dc803f, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@7029d0, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@91606f], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@522509, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@fd91d6, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=Operation, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=com.mysql.jdbc.JDBC4Connection@f0747e, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@dc803f, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@7029d0, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@91606f], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@522509, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@fd91d6, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName() - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=Operation, escapePattern=null) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=numOp, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=com.mysql.jdbc.JDBC4Connection@f0747e, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@dc803f, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@7029d0, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@91606f], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@522509, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@fd91d6, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName() - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=numOp, escapePattern=null) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=dateOp, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=com.mysql.jdbc.JDBC4Connection@f0747e, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@dc803f, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@7029d0, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@91606f], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@522509, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@fd91d6, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName() - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=dateOp, escapePattern=null) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=label, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=com.mysql.jdbc.JDBC4Connection@f0747e, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@dc803f, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@7029d0, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@91606f], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@522509, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@fd91d6, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName() - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=label, escapePattern=null) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=montant, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=com.mysql.jdbc.JDBC4Connection@f0747e, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@dc803f, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@7029d0, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@91606f], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@522509, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@fd91d6, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName() - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=montant, escapePattern=null) - start
2013-12-11 10:57:04,916 DEBUG main org.dbunit.operation.AbstractOperation - getQualifiedName(prefix=null, name=ref_compte, connection=org.dbunit.database.DatabaseConnection[schema=null, connection=com.mysql.jdbc.JDBC4Connection@f0747e, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@dc803f, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@7029d0, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@91606f], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@522509, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@fd91d6, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName() - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.util.QualifiedTableName - getQualifiedName(prefix=null, name=ref_compte, escapePattern=null) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=numOp) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numOp) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numOp) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=1, statement=com.mysql.jdbc.JDBC4PreparedStatement@133e105: insert into Operation (numOp, dateOp, label, montant, ref_compte) values (** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=dateOp) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=dateOp) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=dateOp) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.datatype.DateDataType - setSqlValue(value=2010-12-24, column=2, statement=com.mysql.jdbc.JDBC4PreparedStatement@133e105: insert into Operation (numOp, dateOp, label, montant, ref_compte) values (1, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.datatype.DateDataType - typeCast(value=2010-12-24) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=label) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,917 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.datatype.StringDataType - setSqlValue(value=achat xy, column=3, statement=com.mysql.jdbc.JDBC4PreparedStatement@133e105: insert into Operation (numOp, dateOp, label, montant, ref_compte) values (1, '2010-12-24', ** NOT SPECIFIED **, ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.datatype.DataType - asString(value=achat xy) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.datatype.StringDataType - typeCast(value=achat xy) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=montant) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=montant) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=montant) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.datatype.DoubleDataType - setSqlValue(value=-50, column=4, statement=com.mysql.jdbc.JDBC4PreparedStatement@133e105: insert into Operation (numOp, dateOp, label, montant, ref_compte) values (1, '2010-12-24', 'achat xy', ** NOT SPECIFIED **, ** NOT SPECIFIED **)) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.datatype.DoubleDataType - typeCast(value=-50) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.datatype.DoubleDataType - typeCast(value=-50) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=ref_compte) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=ref_compte) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=ref_compte) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - setSqlValue(value=1, column=5, statement=com.mysql.jdbc.JDBC4PreparedStatement@133e105: insert into Operation (numOp, dateOp, label, montant, ref_compte) values (1, '2010-12-24', 'achat xy', -50.0, ** NOT SPECIFIED **)) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
2013-12-11 10:57:04,918 DEBUG main org.dbunit.dataset.datatype.IntegerDataType - typeCast(value=1) - start
2013-12-11 10:57:04,919 DEBUG main org.dbunit.operation.InsertOperation - equalsIgnoreMapping(ignoreMapping={}, table=org.dbunit.dataset.DefaultTable[_metaData=tableName=Operation, columns=[(numOp, UNKNOWN, nullableUnknown), (dateOp, UNKNOWN, nullableUnknown), (label, UNKNOWN, nullableUnknown), (montant, UNKNOWN, nullableUnknown), (ref_compte, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1], row=1) - start
2013-12-11 10:57:04,919 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=1, column=numOp) - start
2013-12-11 10:57:04,919 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1) - start
2013-12-11 10:57:04,919 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=1, rowCount=1) - start
2013-12-11 10:57:04,920 DEBUG main org.dbunit.DefaultOperationListener - operationSetUpFinished(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=com.mysql.jdbc.JDBC4Connection@f0747e, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@dc803f, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@7029d0, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@91606f], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@522509, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@fd91d6, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
2013-12-11 10:57:04,920 DEBUG main org.dbunit.DefaultOperationListener - closeConnection(connection=org.dbunit.database.DatabaseConnection[schema=null, connection=com.mysql.jdbc.JDBC4Connection@f0747e, super=_databaseConfig=org.dbunit.database.DatabaseConfig[, _propertyMap={http://www.dbunit.org/properties/statementFactory=org.dbunit.database.statement.PreparedStatementFactory@dc803f, http://www.dbunit.org/features/caseSensitiveTableNames=false, http://www.dbunit.org/properties/fetchSize=100, http://www.dbunit.org/features/batchedStatements=false, http://www.dbunit.org/properties/metadataHandler=org.dbunit.database.DefaultMetadataHandler@7029d0, http://www.dbunit.org/properties/datatypeFactory=org.dbunit.dataset.datatype.DefaultDataTypeFactory[_toleratedDeltaMap=org.dbunit.dataset.datatype.ToleratedDeltaMap@91606f], http://www.dbunit.org/properties/escapePattern=null, http://www.dbunit.org/properties/batchSize=100, http://www.dbunit.org/features/qualifiedTableNames=false, http://www.dbunit.org/properties/tableType=[Ljava.lang.String;@522509, http://www.dbunit.org/properties/resultSetTableFactory=org.dbunit.database.CachedResultSetTableFactory@fd91d6, http://www.dbunit.org/features/datatypeWarning=true}], _dataSet=AbstractDataSet[_orderedTableNameMap=null]]) - start
2013-12-11 10:57:04,920 INFO main org.mycontrib.generic.test.GenericDaoTest - ****** test CRUD sur T avec plusieurs petites transactions (via DAO GenericDao<T>) *****
2013-12-11 10:57:04,920 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@1bcd6f0, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@c34a54) - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@1bcd6f0, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@c34a54) - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1450aa2) - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.CachedDataSet - startDataSet() - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=Compte, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1450aa2) - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=Compte) - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=Compte, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1450aa2) - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)]) - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Compte, object=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,921 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - end - result=COMPTE
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=solde) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.CachedDataSet - row(values=compte pel) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.DefaultTable - addRow(values=compte pel) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=Compte) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.CachedDataSet - endTable() - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Compte, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - end - result=COMPTE
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[Compte], _tableMap={COMPTE=org.dbunit.dataset.DefaultTable[_metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractDataSet - getTable(tableName=Compte) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractDataSet - initialize() - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.DefaultTableIterator - getTable() - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Compte, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - end - result=COMPTE
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=label) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=solde) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=solde) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=solde) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=numCpt) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numCpt) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numCpt) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=operations) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=operations) - start
2013-12-11 10:57:04,922 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=operations) - start
2013-12-11 10:57:04,926 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=proprietaire) - start
2013-12-11 10:57:04,926 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,926 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,926 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=proprietaire) - start
2013-12-11 10:57:04,926 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=proprietaire) - start
2013-12-11 10:57:04,926 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jamonGenericProfilerAspectBean'
2013-12-11 10:57:04,926 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 10:57:04,926 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.mycontrib.generic.persistence.spring.GenericDaoJpaSpring.persistNewEntity]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2013-12-11 10:57:04,926 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867558249
2013-12-11 10:57:04,926 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@a21e54] for JPA transaction
2013-12-11 10:57:04,926 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 10:57:04,926 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 10:57:04,926 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:jamon:mysql://localhost/minibank_db?jamonrealdriver=com.mysql.jdbc.Driver]
2013-12-11 10:57:04,929 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 10:57:04,929 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 10:57:04,929 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@a21e54] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@1447ac7] does not support JDBC Connection retrieval
2013-12-11 10:57:04,929 DEBUG main org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
2013-12-11 10:57:04,929 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 10:57:04,929 DEBUG main org.hibernate.SQL - insert into Compte (label, ref_proprietaire, solde) values (?, ?, ?)
2013-12-11 10:57:04,930 DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 9
2013-12-11 10:57:04,930 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 10:57:04,930 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 10:57:04,930 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@a21e54]
2013-12-11 10:57:04,930 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 10:57:04,930 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 10:57:04,930 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 10:57:04,930 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 10:57:04,930 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2013-12-11 10:57:04,930 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 10:57:04,930 DEBUG main org.hibernate.pretty.Printer - xxx.yyy.zzz.backoffice_test.entity._Compte{solde=75.0, proprietaire=null, label=compte pel, operations=null, numCpt=9}
2013-12-11 10:57:04,932 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 10:57:04,932 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 10:57:04,932 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 10:57:04,932 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 10:57:04,932 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@a21e54] after transaction
2013-12-11 10:57:04,932 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 10:57:04,932 INFO main org.mycontrib.generic.test.GenericDaoTest - 	 id(pk) de la nouvelle entite creee: 9
2013-12-11 10:57:04,933 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jamonGenericProfilerAspectBean'
2013-12-11 10:57:04,933 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 10:57:04,933 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.mycontrib.generic.persistence.spring.GenericDaoJpaSpring.getEntityById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 10:57:04,933 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867558249
2013-12-11 10:57:04,933 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@11cb860] for JPA transaction
2013-12-11 10:57:04,933 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 10:57:04,933 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 10:57:04,933 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:jamon:mysql://localhost/minibank_db?jamonrealdriver=com.mysql.jdbc.Driver]
2013-12-11 10:57:04,938 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 10:57:04,938 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 10:57:04,938 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@11cb860] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@1447ac7] does not support JDBC Connection retrieval
2013-12-11 10:57:04,938 DEBUG main org.hibernate.loader.Loader - loading entity: [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,938 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 10:57:04,938 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt3_3_, compte0_.label as label3_3_, compte0_.ref_proprietaire as ref4_3_3_, compte0_.solde as solde3_3_, client1_.numClient as numClient0_0_, client1_.ref_adressePrincipale as ref5_0_0_, client1_.dateNaissance as dateNais2_0_0_, client1_.ref_infosAuth as ref6_0_0_, client1_.nom as nom0_0_, client1_.prenom as prenom0_0_, adresse2_.idAdr as idAdr1_1_, adresse2_.codePostal as codePostal1_1_, adresse2_.rue as rue1_1_, adresse2_.ville as ville1_1_, infosauth3_.idAuth as idAuth2_2_, infosauth3_.password as password2_2_ from Compte compte0_ left outer join Client client1_ on compte0_.ref_proprietaire=client1_.numClient left outer join Adresse adresse2_ on client1_.ref_adressePrincipale=adresse2_.idAdr left outer join InfosAuth infosauth3_ on client1_.ref_infosAuth=infosauth3_.idAuth where compte0_.numCpt=?
2013-12-11 10:57:04,940 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 10:57:04,941 DEBUG main org.hibernate.loader.Loader - result row: null, null, null, EntityKey[xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,941 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 10:57:04,941 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 10:57:04,941 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,941 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,941 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 10:57:04,941 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 10:57:04,941 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 10:57:04,941 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@11cb860]
2013-12-11 10:57:04,941 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 10:57:04,941 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 10:57:04,941 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 10:57:04,941 DEBUG main org.hibernate.engine.Collections - Collection found: [xxx.yyy.zzz.backoffice_test.entity._Compte.operations#9], was: [xxx.yyy.zzz.backoffice_test.entity._Compte.operations#9] (uninitialized)
2013-12-11 10:57:04,941 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 10:57:04,941 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2013-12-11 10:57:04,941 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 10:57:04,941 DEBUG main org.hibernate.pretty.Printer - xxx.yyy.zzz.backoffice_test.entity._Compte{solde=75.0, proprietaire=null, label=compte pel, operations=<uninitialized>, numCpt=9}
2013-12-11 10:57:04,941 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 10:57:04,942 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 10:57:04,942 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 10:57:04,942 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 10:57:04,942 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@11cb860] after transaction
2013-12-11 10:57:04,942 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 10:57:04,942 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 10:57:04,942 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 10:57:04,942 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
2013-12-11 10:57:04,942 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
2013-12-11 10:57:04,942 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@fc8079, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@1569bee) - start
2013-12-11 10:57:04,942 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@fc8079, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@1569bee) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1172c12) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.CachedDataSet - startDataSet() - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=Compte, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1172c12) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=Compte) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=Compte, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1172c12) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)]) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Compte, object=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - end - result=COMPTE
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=solde) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.CachedDataSet - row(values=compte pel) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.DefaultTable - addRow(values=compte pel) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=Compte) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.CachedDataSet - endTable() - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Compte, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - end - result=COMPTE
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[Compte], _tableMap={COMPTE=org.dbunit.dataset.DefaultTable[_metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.AbstractDataSet - getTable(tableName=Compte) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.AbstractDataSet - initialize() - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,943 DEBUG main org.dbunit.dataset.DefaultTableIterator - getTable() - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Compte, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - end - result=COMPTE
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=label) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=solde) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=solde) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=solde) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=numCpt) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numCpt) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numCpt) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=operations) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=operations) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=operations) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=proprietaire) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=proprietaire) - start
2013-12-11 10:57:04,946 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=proprietaire) - start
2013-12-11 10:57:04,946 INFO main org.mycontrib.generic.test.GenericDaoTest - 	 valeurs initiales de l'entite (creee): Compte(label=compte pel,solde=75.0,numCpt=9)
2013-12-11 10:57:04,947 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jamonGenericProfilerAspectBean'
2013-12-11 10:57:04,947 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 10:57:04,947 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.mycontrib.generic.persistence.spring.GenericDaoJpaSpring.getEntityById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 10:57:04,947 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867558249
2013-12-11 10:57:04,947 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@abb1b] for JPA transaction
2013-12-11 10:57:04,947 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 10:57:04,947 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 10:57:04,947 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:jamon:mysql://localhost/minibank_db?jamonrealdriver=com.mysql.jdbc.Driver]
2013-12-11 10:57:04,951 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 10:57:04,951 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 10:57:04,951 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@abb1b] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@1447ac7] does not support JDBC Connection retrieval
2013-12-11 10:57:04,951 DEBUG main org.hibernate.loader.Loader - loading entity: [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,951 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 10:57:04,951 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt3_3_, compte0_.label as label3_3_, compte0_.ref_proprietaire as ref4_3_3_, compte0_.solde as solde3_3_, client1_.numClient as numClient0_0_, client1_.ref_adressePrincipale as ref5_0_0_, client1_.dateNaissance as dateNais2_0_0_, client1_.ref_infosAuth as ref6_0_0_, client1_.nom as nom0_0_, client1_.prenom as prenom0_0_, adresse2_.idAdr as idAdr1_1_, adresse2_.codePostal as codePostal1_1_, adresse2_.rue as rue1_1_, adresse2_.ville as ville1_1_, infosauth3_.idAuth as idAuth2_2_, infosauth3_.password as password2_2_ from Compte compte0_ left outer join Client client1_ on compte0_.ref_proprietaire=client1_.numClient left outer join Adresse adresse2_ on client1_.ref_adressePrincipale=adresse2_.idAdr left outer join InfosAuth infosauth3_ on client1_.ref_infosAuth=infosauth3_.idAuth where compte0_.numCpt=?
2013-12-11 10:57:04,952 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 10:57:04,952 DEBUG main org.hibernate.loader.Loader - result row: null, null, null, EntityKey[xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,952 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 10:57:04,952 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 10:57:04,952 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,952 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,952 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 10:57:04,952 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 10:57:04,952 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 10:57:04,952 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@abb1b]
2013-12-11 10:57:04,952 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 10:57:04,952 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 10:57:04,952 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 10:57:04,952 DEBUG main org.hibernate.engine.Collections - Collection found: [xxx.yyy.zzz.backoffice_test.entity._Compte.operations#9], was: [xxx.yyy.zzz.backoffice_test.entity._Compte.operations#9] (uninitialized)
2013-12-11 10:57:04,952 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 10:57:04,952 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2013-12-11 10:57:04,952 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 10:57:04,952 DEBUG main org.hibernate.pretty.Printer - xxx.yyy.zzz.backoffice_test.entity._Compte{solde=75.0, proprietaire=null, label=compte pel, operations=<uninitialized>, numCpt=9}
2013-12-11 10:57:04,953 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 10:57:04,953 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 10:57:04,953 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 10:57:04,953 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 10:57:04,953 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@abb1b] after transaction
2013-12-11 10:57:04,953 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 10:57:04,953 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 10:57:04,953 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 10:57:04,953 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
2013-12-11 10:57:04,953 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
2013-12-11 10:57:04,953 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@a69b89, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@2d4d0a) - start
2013-12-11 10:57:04,953 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@a69b89, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@2d4d0a) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1ce43b) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.CachedDataSet - startDataSet() - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=Compte, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1ce43b) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=Compte, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@1ce43b) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)]) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Compte, object=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=solde) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.CachedDataSet - row(values=compte pel updated) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.DefaultTable - addRow(values=compte pel updated) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.CachedDataSet - endTable() - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Compte, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[Compte], _tableMap={COMPTE=org.dbunit.dataset.DefaultTable[_metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.AbstractDataSet - getTable(tableName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.AbstractDataSet - initialize() - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.DefaultTableIterator - getTable() - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Compte, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=label) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=solde) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=solde) - start
2013-12-11 10:57:04,954 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=solde) - start
2013-12-11 10:57:04,956 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=numCpt) - start
2013-12-11 10:57:04,956 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,956 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,956 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numCpt) - start
2013-12-11 10:57:04,956 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numCpt) - start
2013-12-11 10:57:04,956 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=operations) - start
2013-12-11 10:57:04,956 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,956 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,956 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=operations) - start
2013-12-11 10:57:04,956 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=operations) - start
2013-12-11 10:57:04,957 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=proprietaire) - start
2013-12-11 10:57:04,957 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,957 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,957 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=proprietaire) - start
2013-12-11 10:57:04,957 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=proprietaire) - start
2013-12-11 10:57:04,957 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jamonGenericProfilerAspectBean'
2013-12-11 10:57:04,957 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 10:57:04,957 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.mycontrib.generic.persistence.spring.GenericDaoJpaSpring.updateEntity]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2013-12-11 10:57:04,957 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867558249
2013-12-11 10:57:04,957 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@1c73122] for JPA transaction
2013-12-11 10:57:04,957 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 10:57:04,957 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 10:57:04,957 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:jamon:mysql://localhost/minibank_db?jamonrealdriver=com.mysql.jdbc.Driver]
2013-12-11 10:57:04,960 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 10:57:04,960 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 10:57:04,960 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@1c73122] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@1447ac7] does not support JDBC Connection retrieval
2013-12-11 10:57:04,960 DEBUG main org.hibernate.loader.Loader - loading entity: [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,960 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 10:57:04,960 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt3_0_, compte0_.label as label3_0_, compte0_.ref_proprietaire as ref4_3_0_, compte0_.solde as solde3_0_ from Compte compte0_ where compte0_.numCpt=?
2013-12-11 10:57:04,961 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 10:57:04,961 DEBUG main org.hibernate.loader.Loader - result row: EntityKey[xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,961 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 10:57:04,961 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 10:57:04,961 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,961 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,961 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 10:57:04,962 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 10:57:04,962 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 10:57:04,962 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@1c73122]
2013-12-11 10:57:04,962 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 10:57:04,962 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 10:57:04,962 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 10:57:04,962 DEBUG main org.hibernate.engine.Collections - Collection found: [xxx.yyy.zzz.backoffice_test.entity._Compte.operations#9], was: [xxx.yyy.zzz.backoffice_test.entity._Compte.operations#9] (uninitialized)
2013-12-11 10:57:04,962 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
2013-12-11 10:57:04,962 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2013-12-11 10:57:04,962 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 10:57:04,962 DEBUG main org.hibernate.pretty.Printer - xxx.yyy.zzz.backoffice_test.entity._Compte{solde=76.0, proprietaire=null, label=compte pel updated, operations=<uninitialized>, numCpt=9}
2013-12-11 10:57:04,962 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 10:57:04,962 DEBUG main org.hibernate.SQL - update Compte set label=?, ref_proprietaire=?, solde=? where numCpt=?
2013-12-11 10:57:04,962 DEBUG main org.hibernate.jdbc.AbstractBatcher - Executing batch size: 1
2013-12-11 10:57:04,963 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 10:57:04,964 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 10:57:04,964 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 10:57:04,964 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 10:57:04,965 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 10:57:04,965 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@1c73122] after transaction
2013-12-11 10:57:04,965 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 10:57:04,965 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jamonGenericProfilerAspectBean'
2013-12-11 10:57:04,965 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 10:57:04,965 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.mycontrib.generic.persistence.spring.GenericDaoJpaSpring.getEntityById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly; ''
2013-12-11 10:57:04,965 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867558249
2013-12-11 10:57:04,965 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@19ea2a7] for JPA transaction
2013-12-11 10:57:04,965 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 10:57:04,965 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 10:57:04,965 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:jamon:mysql://localhost/minibank_db?jamonrealdriver=com.mysql.jdbc.Driver]
2013-12-11 10:57:04,968 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 10:57:04,968 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 10:57:04,968 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@19ea2a7] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@1447ac7] does not support JDBC Connection retrieval
2013-12-11 10:57:04,968 DEBUG main org.hibernate.loader.Loader - loading entity: [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,968 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 10:57:04,968 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt3_3_, compte0_.label as label3_3_, compte0_.ref_proprietaire as ref4_3_3_, compte0_.solde as solde3_3_, client1_.numClient as numClient0_0_, client1_.ref_adressePrincipale as ref5_0_0_, client1_.dateNaissance as dateNais2_0_0_, client1_.ref_infosAuth as ref6_0_0_, client1_.nom as nom0_0_, client1_.prenom as prenom0_0_, adresse2_.idAdr as idAdr1_1_, adresse2_.codePostal as codePostal1_1_, adresse2_.rue as rue1_1_, adresse2_.ville as ville1_1_, infosauth3_.idAuth as idAuth2_2_, infosauth3_.password as password2_2_ from Compte compte0_ left outer join Client client1_ on compte0_.ref_proprietaire=client1_.numClient left outer join Adresse adresse2_ on client1_.ref_adressePrincipale=adresse2_.idAdr left outer join InfosAuth infosauth3_ on client1_.ref_infosAuth=infosauth3_.idAuth where compte0_.numCpt=?
2013-12-11 10:57:04,969 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
2013-12-11 10:57:04,969 DEBUG main org.hibernate.loader.Loader - result row: null, null, null, EntityKey[xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,970 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
2013-12-11 10:57:04,970 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2013-12-11 10:57:04,970 DEBUG main org.hibernate.engine.TwoPhaseLoad - resolving associations for [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,970 DEBUG main org.hibernate.engine.TwoPhaseLoad - done materializing entity [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,970 DEBUG main org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
2013-12-11 10:57:04,970 DEBUG main org.hibernate.loader.Loader - done entity load
2013-12-11 10:57:04,970 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction commit
2013-12-11 10:57:04,970 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Committing JPA transaction on EntityManager [org.hibernate.ejb.EntityManagerImpl@19ea2a7]
2013-12-11 10:57:04,970 DEBUG main org.hibernate.transaction.JDBCTransaction - commit
2013-12-11 10:57:04,970 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
2013-12-11 10:57:04,970 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
2013-12-11 10:57:04,970 DEBUG main org.hibernate.engine.Collections - Collection found: [xxx.yyy.zzz.backoffice_test.entity._Compte.operations#9], was: [xxx.yyy.zzz.backoffice_test.entity._Compte.operations#9] (uninitialized)
2013-12-11 10:57:04,970 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2013-12-11 10:57:04,970 DEBUG main org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2013-12-11 10:57:04,970 DEBUG main org.hibernate.pretty.Printer - listing entities:
2013-12-11 10:57:04,970 DEBUG main org.hibernate.pretty.Printer - xxx.yyy.zzz.backoffice_test.entity._Compte{solde=76.0, proprietaire=null, label=compte pel updated, operations=<uninitialized>, numCpt=9}
2013-12-11 10:57:04,970 DEBUG main org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
2013-12-11 10:57:04,970 DEBUG main org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
2013-12-11 10:57:04,970 DEBUG main org.hibernate.jdbc.ConnectionManager - aggressively releasing JDBC connection
2013-12-11 10:57:04,970 DEBUG main org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2013-12-11 10:57:04,970 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.ejb.EntityManagerImpl@19ea2a7] after transaction
2013-12-11 10:57:04,970 DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
2013-12-11 10:57:04,970 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlDataSet with builder parameters: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 10:57:04,970 DEBUG main org.dbunit.dataset.xml.FlatXmlDataSetBuilder - Creating FlatXmlProducer using the properties of this builder: org.dbunit.dataset.xml.FlatXmlDataSetBuilder[dtdMetadata=true, columnSensing=false, caseSensitiveTableNames=false, metaDataSet=null]
2013-12-11 10:57:04,970 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - setConsumer(consumer) - start
2013-12-11 10:57:04,970 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - produce() - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setLexicalHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@1e37bfe, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@1e1783b) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.xml.FlatDtdProducer - setDeclHandler(xmlReader=com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser@1e37bfe, handler=org.dbunit.dataset.xml.FlatXmlProducer$FlatDtdHandler@1e1783b) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=dataset, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19c8312) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.CachedDataSet - startDataSet() - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - startElement(uri=, localName=, qName=Compte, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19c8312) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - isLastTable(tableName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - createTableMetaData(tableName=Compte, attributes=com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser$AttributesProxy@19c8312) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.Columns - getColumns(columnNames=[], columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)]) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Compte, object=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - end - result=COMPTE
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.CachedDataSet - startTable(metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[]) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=solde) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.CachedDataSet - row(values=compte pel updated) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.DefaultTable - addRow(values=compte pel updated) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.xml.FlatXmlProducer - endElement(uri=, localName=, qName=dataset) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getLastTableName() - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.CachedDataSet - endTable() - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Compte, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - end - result=COMPTE
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.CachedDataSet - endDataSet() - the final tableMap is: org.dbunit.dataset.OrderedTableNameMap[_tableNames=[Compte], _tableMap={COMPTE=org.dbunit.dataset.DefaultTable[_metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]}, _caseSensitiveTableNames=false]
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.AbstractDataSet - getTable(tableName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.AbstractDataSet - initialize() - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.CachedDataSet - createIterator(reversed=false) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - orderedValues() - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.DefaultTableIterator - getTable() - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - add(tableName=Compte, object=org.dbunit.dataset.DefaultTable[_metaData=tableName=Compte, columns=[(label, UNKNOWN, nullableUnknown), (solde, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=1]) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=COMPTE) - end - result=COMPTE
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - start
2013-12-11 10:57:04,972 DEBUG main org.dbunit.dataset.OrderedTableNameMap - getTableName(tableName=Compte) - end - result=COMPTE
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=label) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=label) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=solde) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=solde) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=solde) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=numCpt) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=numCpt) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=numCpt) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=operations) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=operations) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=operations) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.DefaultTable - getValue(row=0, column=proprietaire) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - assertValidRowIndex(row=0, rowCount=1) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTable - getColumnIndex(columnName=proprietaire) - start
2013-12-11 10:57:04,973 DEBUG main org.dbunit.dataset.AbstractTableMetaData - getColumnIndex(columnName=proprietaire) - start
2013-12-11 10:57:04,973 INFO main org.mycontrib.generic.test.GenericDaoTest - 	 nouvelle valeur de l'entite (modifiee): Compte(label=compte pel updated,solde=76.0,numCpt=9)
2013-12-11 10:57:04,974 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'jamonGenericProfilerAspectBean'
2013-12-11 10:57:04,974 DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'txManager'
2013-12-11 10:57:04,974 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [org.mycontrib.generic.persistence.spring.GenericDaoJpaSpring.deleteEntity]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
2013-12-11 10:57:04,975 DEBUG main org.hibernate.impl.SessionImpl - opened session at timestamp: 13867558249
2013-12-11 10:57:04,975 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.ejb.EntityManagerImpl@13835ba] for JPA transaction
2013-12-11 10:57:04,975 DEBUG main org.hibernate.transaction.JDBCTransaction - begin
2013-12-11 10:57:04,975 DEBUG main org.hibernate.jdbc.ConnectionManager - opening JDBC connection
2013-12-11 10:57:04,975 DEBUG main org.springframework.jdbc.datasource.DriverManagerDataSource - Creating new JDBC DriverManager Connection to [jdbc:jamon:mysql://localhost/minibank_db?jamonrealdriver=com.mysql.jdbc.Driver]
2013-12-11 10:57:04,979 DEBUG main org.hibernate.transaction.JDBCTransaction - current autocommit status: true
2013-12-11 10:57:04,979 DEBUG main org.hibernate.transaction.JDBCTransaction - disabling autocommit
2013-12-11 10:57:04,979 DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.ejb.EntityManagerImpl@13835ba] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@1447ac7] does not support JDBC Connection retrieval
2013-12-11 10:57:04,979 DEBUG main org.hibernate.loader.Loader - loading entity: [xxx.yyy.zzz.backoffice_test.entity._Compte#9]
2013-12-11 10:57:04,979 DEBUG main org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2013-12-11 10:57:04,979 DEBUG main org.hibernate.SQL - select compte0_.numCpt as numCpt3_3_, compte0_.label as label3_3_, compte0_.ref_proprietaire as ref4_3_3_, compte0_.solde as solde3_3_, client1_.numClient as numClient0_0_, client1_.ref_adressePrincipale as ref5_0_0_, client1_.dateNaissance as dateNais2_0_0_, client1_.ref_infosAuth as ref6_0_0_, client1_.nom as nom0_0_, client1_.prenom as prenom0_0_, adresse2_.idAdr as idAdr1_1_, adresse2_.codePostal as codePostal1_1_, adresse2_.rue as rue1_1_, adresse2_.ville as ville1_1_, infosauth3_.idAuth as idAuth2_2_, infosauth3_.password as password2_2_ from Compte compte0_ left outer join Client client1_ on compte0_.ref_proprietaire=client1_.numClient left outer join Adresse adresse2_ on client1_.ref_adressePrincipale=adresse2_.idAdr left outer join InfosAuth infosauth3_ on client1_.ref_infosAuth=infosauth3_.idAuth where compte0_.numCpt=?
